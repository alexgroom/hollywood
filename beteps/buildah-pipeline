apiVersion: tekton.dev/v1beta1
kind: Pipeline
metadata:
  name: buildah-pipeline
  namespace: ag-beteps
spec:
  params:
    - default: >-
        image-registry.openshift-image-registry.svc:5000/$(context.pipelineRun.namespace)/tkbeteps:latest
      name: IMAGE_NAME
      type: string
    - default: >-
        git@github.com:bet01/beteps.git
      name: GIT_REPO
      type: string
    - default: master
      name: GIT_REVISION
      type: string
    - default: >
        # syntax = docker/dockerfile:experimental

        FROM elixir:1.11.2-alpine as builder

        RUN apk add --no-cache --update git build-base nodejs yarn
        openssh-client

        ADD secrets /etc/secrets

        RUN mkdir -p ~/.ssh && touch ~/.ssh/known_hosts && ssh-keyscan
        github.com >> ~/.ssh/known_hosts

        WORKDIR /app

        RUN mix do local.hex --force, local.rebar --force

        COPY ./mix.exs ./mix.lock ./

        COPY ./apps/bet_eps/mix.exs ./apps/bet_eps/mix.exs

        COPY ./apps/web/mix.exs ./apps/web/mix.exs

        COPY ./apps/bet_messages/mix.exs ./apps/bet_messages/mix.exs

        COPY ./config/config.exs ./config/config.exs

        COPY ./config/prod.exs ./config/prod.exs

        ENV MIX_ENV=prod

        RUN eval "$(ssh-agent)" && ssh-agent -s && chmod -R 0600 /etc/secrets &&
        ssh-add /etc/secrets/**/* && \
          mix do deps.get --only $MIX_ENV, deps.compile

        RUN   rm -rf /etc/secrets

        COPY apps apps

        RUN MIX_ENV=prod mix compile

        COPY ./rel ./rel

        COPY ./config/releases.exs ./config/releases.exs

        RUN MIX_ENV=prod mix release > /dev/null

        FROM alpine:3.12 AS release

        RUN apk add --update --no-cache openssl ncurses-libs snappy

        WORKDIR /app

        COPY --from=builder /app/_build/prod/rel/beteps/ .

        RUN find /app -type f -perm +0100 -exec chmod 555 {} \;

        ENTRYPOINT ["./bin/beteps"]

        CMD [""]
      name: DOCKERFILE
      type: string
    - default: .
      name: CONTEXT
      type: string
  tasks:
    - name: fetch-repository
      params:
        - name: url
          value: $(params.GIT_REPO)
        - name: revision
          value: $(params.GIT_REVISION)
      taskRef:
        kind: ClusterTask
        name: git-clone
      workspaces:
        - name: output
          workspace: workspace
    - name: buildah-with-secret
      params:
        - name: IMAGE
          value: $(params.IMAGE_NAME)
        - name: DOCKERFILE
          value: $(params.DOCKERFILE)
        - name: CONTEXT
          value: $(params.CONTEXT)
      runAfter:
        - fetch-repository
      taskRef:
        kind: Task
        name: buildah-with-secret
      workspaces:
        - name: source
          workspace: workspace
  workspaces:
    - name: workspace
